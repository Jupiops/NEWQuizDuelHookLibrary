# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      # Cache NDK toolchain
      - name: Cache NDK
        id: cache-ndk
        uses: actions/cache@v4
        with:
          path: ~/.android-ndk/ # The location where the NDK is installed
          key: ndk-${{ runner.os }}-${{ hashFiles('build.gradle') }}-r16b
          restore-keys: |
            ndk-${{ runner.os }}-
      
      # Set up NDK if not cached
      - name: Set up NDK
        if: steps.cache-ndk.outputs.cache-hit != 'true'
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r16b

      # Cache apt-get dependencies
      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt
          key: apt-cache-${{ runner.os }}-${{ hashFiles('build.sh') }}
          restore-keys: |
            apt-cache-${{ runner.os }}-

      # Install dependencies
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libncurses5

      # Run the build script
      - run: ./build.sh

      # Upload the resulting artifact
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: libhookso
          compression-level: 9
          path: |
            x32/libs
            x64/libs
